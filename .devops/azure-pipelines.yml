# Automatically triggered on PR
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema#pr-trigger
trigger: none

parameters:
  - name: "SUBSCRIPTION"
    displayName: "Azure subscription hosting the infrastructure built with terraform"
    type: string
    default: PROD-IO-SERVICE-CONN
    values:
      - PROD-IO-SERVICE-CONN
      - DEV-IO-SERVICE-CONN

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: install_and_run_terraform
    steps:
      # 1. Install terraform
      - task: AzureCLI@2
        displayName: Install terraform
        inputs:
          azureSubscription: "${{ parameters.SUBSCRIPTION }}"
          scriptType: "bash"
          scriptLocation: "inlineScript"
          failOnStandardError: false
          inlineScript: |
            TERRAFORM_VERSION="$(cat .terraform-version)"
            wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
            unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
            sudo mv terraform /usr/local/bin/
            terraform -v
            rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      # 2. Install terragrunt
      - task: AzureCLI@2
        displayName: Install terrgrunt
        inputs:
          azureSubscription: "${{ parameters.SUBSCRIPTION }}"
          scriptType: "bash"
          scriptLocation: "inlineScript"
          failOnStandardError: false
          inlineScript: |
            TERRAGRUNT_VERSION="$(cat .terragrunt-version)"
            wget https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64
            chmod +x terragrunt_linux_amd64
            sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
            terragrunt -v
        # 3. Install SSH key
      - task: InstallSSHKey@0
        inputs:
          knownHostsEntry: "github.com"
          sshKeySecureFile: "id_ed25519"
      # 4. Run terragrunt plan
      - task: AzureCLI@2
        displayName: Run terragrunt plans
        inputs:
          azureSubscription: "${{ parameters.SUBSCRIPTION }}"
          scriptType: "bash"
          scriptLocation: "inlineScript"
          failOnStandardError: false
          inlineScript: |
            export ARM_CLIENT_ID=$(CLIENT_ID)
            export ARM_CLIENT_SECRET=$(CLIENT_SECRET)
            export ARM_SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)
            export ARM_TENANT_ID=$(TENANT_ID)

            base_dir=$(pwd)

            # Get new files or changed in the current branch
            file_changed=$(git diff --diff-filter=AM --name-only origin/master | grep terragrunt.hcl)

            for item in ${file_changed}
            do
              cd ${base_dir}
              wdir=$(dirname $item)

              echo "terragrunt file: ${item}"
              cd ${wdir}
              terragrunt plan
            done

            # get file deleted in the current branch.
            file_deleted=$(git diff --diff-filter=D --name-only origin/master | grep terragrunt.hcl)
            for item in ${file_deleted}
            do
              echo "Deleted file: ${item}."
              echo "TODO: Run terragrung destroy"
            done
